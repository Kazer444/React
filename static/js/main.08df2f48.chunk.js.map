{"version":3,"sources":["appElements/Body/Profile/png/dog.jpg","appElements/Body/Profile/UserInfo.module.css","appElements/Users/img/user.png","appElements/Users/img/free-gif-preloaders-psds-09.gif","appElements/Sidebar/Sidebar.jsx","appElements/Bottom/Bottom.jsx","appElements/Body/Profile/addComment/addComment.jsx","appElements/Body/Profile/UserInfo.jsx","appElements/API/API.js","appElements/Body/Profile/StatusWithHooks.js","appElements/Body/Profile/Profile.jsx","appElements/Body/Dialogs/Post/Post.jsx","appElements/Body/Dialogs/Dialogs.jsx","appElements/Body/Login/login.js","appElements/Body/Body.jsx","Reducers/authMeReducer.js","Reducers/loginReducer.js","appElements/Body/connect/connect.jsx","appElements/Users/UsersMap/usersMap.jsx","appElements/Users/UsersSteck/usersSteck.jsx","Reducers/UsersReducer.jsx","appElements/Users/UsersAPI.jsx","appElements/Header/logInfo.js","appElements/Header/Header.jsx","appElements/Header/HeaderAPI.jsx","App.js","serviceWorker.js","Reducers/postReducer.jsx","Reducers/commentReducer.jsx","Reducers/UserIdReducer.js","store-redux.js","index.js","app.module.css","appElements/Header/Header.module.css","appElements/Users/UsersSteck/usersSteck.module.css"],"names":["module","exports","Sidebar","Bottom","Comment","props","comment","Textarea","input","meta","className","c","dd","UserInfo","onSubmit","handleSubmit","Field","name","component","info","aboutMe","fullName","src","dog","placeholder","reduxForm","form","instance","axios","create","baseURL","withCredentials","headers","userAPI","count","get","id","post","delete","statusAPI","status","put","loginAPI","email","password","rememberMe","StatusWithHooks","useState","setStatus","dataStatus","setDataStatus","useEffect","a","myId","data","onDoubleClick","value","onBlur","onChange","e","currentTarget","autoFocus","Profile","commentMessage","map","d","useDebugValue","values","addComment","forInput","Post","message","FormTest","postMessage","Dialogs","posts","key","addPost","Login","renderField","validate","maxLength","type","disabled","submitting","length","undefined","error","warning","Body","loggining","then","resultCode","authThunk","this","match","params","userId","path","render","state","authMe","exact","loginThunk","React","Component","initialStore","login","messages","action","dispatch","getState","createSelector","BodyContainer","compose","connect","text","textt","stopSubmit","withRouter","UsersMap","FullName","Country","idFilter","some","onClick","followed","unfollowFunc","followFunc","UsersSteck","UserMap","users","main","second","to","photos","small","userPhoto","alt","img","follow","unfollow","isLoading","loadStatus","isFetching","loadGif","showMore","onPageChanged","togleIsFetching","UsersAPI","UsersThunk","followThunk","unfollowThunk","UsersContainer","items","LogInfo","Header","profile","dialogs","HeaderAPI","HeaderContainer","loginData","App","app","header","body","sidebar","bottom","Boolean","window","location","hostname","initialState","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","large","UserIdReducer","reducers","combineReducers","newPush","stateCopy","filter","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.08df2f48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dog.09324664.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dd\":\"UserInfo_dd__g3N_p\"};","module.exports = __webpack_public_path__ + \"static/media/user.f8a15e74.png\";","module.exports = __webpack_public_path__ + \"static/media/free-gif-preloaders-psds-09.87b8671c.gif\";","import React from 'react';\r\n\r\nlet Sidebar = () => {\r\n    return (\r\n        <div>\r\n            <div>My Profile</div>\r\n            <div> News</div>\r\n            <div> Pages</div>\r\n            <div>Events</div>\r\n            <div>Games</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react';\r\n\r\nlet Bottom=()=>{\r\n    return(\r\n        <div>\r\n            <div> Policy</div>\r\n            <div>Advertisments </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bottom","import React from 'react';\r\n\r\n let Comment=(props)=>{\r\n     return(\r\n     <div>{props.comment}</div>\r\n     )\r\n }\r\n\r\n\r\n export default Comment","import React from 'react'\r\nimport dog  from './png/dog.jpg'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport c from './UserInfo.module.css'\r\n\r\nconst Textarea=({input,meta,...props})=>{\r\n\r\n    return <div  >\r\n        <div ><textarea {...input}{...props} className={c.dd}  /></div>\r\n    </div>\r\n}\r\nlet UserInfo=(props)=>{\r\n  \r\n    return(\r\n        <form onSubmit={props.handleSubmit} >\r\n           <Field name='about me' component='div'>{props.info.aboutMe} </Field>\r\n             <Field name='fullName' component='div'>{props.info.fullName}</Field>\r\n             <div><Field name='dog' component='div'><img src={dog}/></Field></div>\r\n             <Field name='forInput' placeholder='hello' component={Textarea}>    </Field>\r\n             <div><button>Add</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nUserInfo=reduxForm({form: 'UserInfo'})(UserInfo)\r\n\r\n\r\nexport default UserInfo","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  withCredentials: true,\r\n  headers: { 'API-KEY': '2a5c057f-adf0-483b-a14e-555af5b69a41' }\r\n})\r\n\r\nexport const userAPI = {\r\n  getUsers(count) {\r\n    return instance.get(`users?count=${count}`)\r\n  },\r\n  follow(id) {\r\n    return instance.post(`follow/${id}`)\r\n  },\r\n  unfollow(id) {\r\n    return instance.delete(`follow/${id}`)\r\n  },\r\n\r\n  authMe() {\r\n    return instance.get('auth/me')\r\n  }\r\n}\r\n\r\nexport const statusAPI = {\r\n  getStatus(id) { return instance.get(`profile/status/${id}`) },\r\n  \r\n  setStatus(status) { return instance.put('profile/status', { status }) }\r\n}\r\n\r\n\r\nexport let loginAPI={\r\n login(email,password,rememberMe=false){ return instance.post('/auth/login',{email,password,rememberMe})},\r\n logout(){return instance.delete('/auth/login')}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { statusAPI } from '../../API/API';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\nlet StatusWithHooks = (props) => {\r\n\r\n    let [status, setStatus] = useState(true)\r\n    let [dataStatus, setDataStatus] = useState('')\r\n\r\n    useEffect(() => {\r\n\r\n        async function a() {\r\n            let a = await statusAPI.getStatus(props.myId)\r\n            setDataStatus(a.data)\r\n        }\r\n        a()\r\n    }, [])\r\n\r\n\r\n    let func = () => {\r\n        setStatus(false)\r\n    }\r\n\r\n    let func2 = () => {\r\n        setStatus(true)\r\n        statusAPI.setStatus(dataStatus)\r\n    }\r\n\r\n    let func3 = (e) => { setDataStatus(e.currentTarget.value) }\r\n\r\n    let a = ({ input, meta }) => {\r\n        console.log(input.value)\r\n        return <div><input\r\n            value={dataStatus}\r\n            autoFocus={true}\r\n            onChange={(value)=>{input.onChange(value)}} /></div>\r\n    }\r\n\r\n\r\n    return <div>\r\n        {status? <div onDoubleClick={func}>{dataStatus?dataStatus:'hello'}</div>:\r\n            <div><input value={dataStatus} onBlur={func2} onChange={func3} autoFocus={true}/></div>}\r\n    </div>\r\n\r\n    // return <form onSubmit={props.handleSubmit}>\r\n    //     {status ?\r\n    //         <div onDoubleClick={func}>{dataStatus}</div> :\r\n    //         <Field\r\n    //             name='second'\r\n    //             component={a}\r\n    //             onBlur={func2}\r\n    //\r\n    //             onFocus={true} />}\r\n    // </form>\r\n\r\n\r\n}\r\n\r\n// StatusWithHooks = reduxForm({ form: 'status' })(StatusWithHooks)\r\n\r\nexport default StatusWithHooks\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useDebugValue} from 'react';\r\nimport Comment from './addComment/addComment';\r\nimport UserInfo from './UserInfo';\r\nimport StatusWithHooks from './StatusWithHooks';\r\n\r\n\r\n\r\n\r\nlet Profile=(props)=>{\r\n    let commentMessage = props.comment.map( d => <div><Comment comment={d} id={d.id} /></div>);\r\n\r\n    const onSubmit=values=>{\r\n        return props.addComment(values.forInput)}\r\n        useDebugValue()\r\n     return(\r\n        <div >\r\n         \r\n        <div><UserInfo info={props.info} onSubmit={onSubmit}/></div>\r\n        <div>{commentMessage}</div>\r\n        <div> <StatusWithHooks {...props}/> </div>\r\n   \r\n     \r\n    </div>\r\n     )\r\n };\r\n\r\n\r\n\r\n export default Profile","import React from 'react';\r\n\r\n let Post=(props)=>{\r\n     return(\r\n     <div>{props.message}</div>\r\n     )\r\n }\r\n\r\n\r\n\r\n export default Post","import React from 'react';\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\nexport let FormTest=(props)=>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='postMessage' component='div'>{props.postMessage}</Field>\r\n            <Field name='forInput' component='textarea'> </Field>\r\n            <div><button>Add</button></div> \r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nFormTest = reduxForm({ form: 'dialogs' })(FormTest)\r\n\r\nlet Dialogs = (props) => {\r\n     let postMessage = props.posts.map(d => <Post message={d.message} key={d.key} />)\r\n     let onSubmit=(values)=>{return props.addPost(values.forInput)}\r\n     return <div>\r\n         <FormTest onSubmit={onSubmit} postMessage={postMessage}/>\r\n     </div>\r\n}\r\n\r\n\r\n \r\n\r\n\r\n\r\nexport default Dialogs\r\n\r\n\r\n\r\n// let curVal = React.createRef()\r\n\r\n// let addPost = () => {\r\n//     let text = curVal.current.value;\r\n//     props.addPost(text)\r\n//     curVal.current.value = ''\r\n// }\r\n\r\n\r\n\r\n        // <div>\r\n        //     <div> {postMessage} </div>\r\n        //     <div> <textarea ref={curVal} name=\"text\" id=\"text\" /></div>\r\n        //     <div> <button onClick={addPost}>Add</button></div>\r\n        // </div>","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n\r\n\r\nlet Login = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>Login</div>\r\n        <div><Field name='email' component={renderField} validate={[maxLength]}/></div>\r\n        <div><Field name='password' component={renderField} type='password' validate={[maxLength]}/></div>\r\n        <div><Field name='rememberMe' component={renderField} type='checkbox'/></div>\r\n        <button disabled={props.submitting}>Login</button>\r\n    </form>\r\n\r\n}\r\n\r\nlet maxLength = value => value && value.length > 30 ? 'max' : undefined\r\n\r\n\r\nconst renderField = ({ input, type, meta }) => {\r\n    return <div>\r\n        <input {...input} type={type} />\r\n        <div>{meta.error || meta.warning ? <span>{meta.error}</span> : undefined}</div>\r\n    </div>\r\n\r\n}\r\n\r\nLogin = reduxForm({ form: 'login' })(Login)\r\n\r\n\r\nexport default Login","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Profile from './Profile/Profile';\r\nimport Dialogs from './Dialogs/Dialogs';\r\nimport axios from 'axios';\r\nimport Login from './Login/login';\r\nimport { loginAPI } from '../API/API';\r\n\r\n\r\n\r\nclass Body extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${this.props.match.params.userId}`).\r\n        then((data) => { this.props.userId(data.data) })\r\n    }\r\n    loggining=(props)=>{\r\n        return  loginAPI.login(props.email,props.password,props.rememberMe).\r\n        then(data=>data.data.resultCode===0?\r\n            this.props.authThunk():\r\n         null)\r\n    }\r\n    render() {\r\n        // return this.props.state.authMe.resultCode===0? \r\n        return <div>\r\n            <Route path={`/body/profile/:${this.props.match.params.userId}?`} render={() => {\r\n                return <Profile comment={this.props.state.comment.comment}\r\n                    addComment={this.props.comment} info={this.props.state.id}\r\n                myId={this.props.state.authMe.data.id}/>\r\n            }} />\r\n\r\n            <Route exact path={`/body/Dialogs/:${this.props.match.params.userId}?`}\r\n                render={() => {\r\n                    return <Dialogs posts={this.props.state.posts.posts}\r\n                        addPost={this.props.post} />\r\n                }} />\r\n            <Route path='/body/login' render={() => {\r\n                return <Login onSubmit={this.props.loginThunk} />\r\n            }} />\r\n        </div>\r\n        {/* </div>:<Redirect to='/login'/> */ }\r\n    }\r\n}\r\n\r\n\r\nexport default Body\r\n\r\n\r\n\r\n","import {userAPI} from \"../appElements/API/API\"\r\n\r\n\r\nlet initialStore = {\r\n    data: {\r\n        id: null,\r\n        login: null,\r\n        email: null\r\n    },\r\n    messages: [],\r\n    resultCode: 1\r\n\r\n};\r\n\r\n\r\nexport let authMeReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case 'authMe': {\r\n            return { ...state, ...action.action }\r\n        }\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport let authMe = (data) => ({ type: 'authMe', action: data })\r\n\r\nexport let authThunk = (state) => {\r\n    return async (dispatch) => {\r\n        let data=await userAPI.authMe()\r\n        dispatch(authMe(data.data))\r\n\r\n            }\r\n};\r\n\r\n\r\n// async function a() {\r\n//     let a = await statusAPI.getStatus(props.myId)\r\n//     setDataStatus(a.data)\r\n// }\r\n\r\n\r\n","import { loginAPI } from \"../appElements/API/API\"\r\nimport { stopSubmit } from \"redux-form\"\r\n\r\nlet initialStore = {\r\n    email: null,\r\n    password: null,\r\n    rememberMe: null\r\n}\r\n\r\n\r\n\r\nexport let loginReducer = (state = initialStore, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'login':\r\n            return { ...state, ...action.data }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nlet loginAC = (action) => ({ type: 'login', data: action })\r\n\r\n\r\n\r\nexport let loginThunk = props => dispatch => {\r\n    loginAPI.login(props.email, props.password, props.rememberMe).then(\r\n        data => {\r\n            data.data.resultCode == 0 ?\r\n                dispatch(loginAC(data.data)) :\r\n                dispatch(stopSubmit('login', { email: 'some error' }))\r\n\r\n        }\r\n\r\n    )\r\n}","import { connect } from \"react-redux\";\r\nimport Body from \"../Body\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { authThunk } from \"../../../Reducers/authMeReducer\";\r\nimport { createSelector } from \"reselect\";\r\nimport {loginThunk} from \"../../../Reducers/loginReducer\";\r\n\r\n\r\n\r\nlet post=(text)=>({type:'postPush', textt:text})\r\nlet comment=(text)=>({type:'postComment',textt:text})\r\nlet userId=(id)=>({type:'userId',action:id})\r\n\r\nlet stateSelect=(state)=>{\r\n    return state\r\n}\r\n\r\nlet getState= createSelector(stateSelect,(state)=>{return state})\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {state: getState(state)};\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport let BodyContainer=compose(\r\n    connect(mapStateToProps,{post,comment,userId,authThunk, loginThunk }),\r\n    withRouter,\r\n    // withAuthCheck\r\n)(Body)\r\n\r\n","import React from 'react'\r\n\r\n\r\nlet UsersMap = (props) => {\r\n  let followFlag = () => {\r\n    return (props.followed === true ? <div>unfollow</div> : <div>follow</div>)\r\n  }\r\n\r\n\r\n\r\n\r\n  return (<div>\r\n    <div> {props.FullName}</div>\r\n    <div> {props.Country}</div>\r\n    <button disabled={props.idFilter.some(id=>id===props.id)}\r\n      onClick={() => {\r\n        props.followed === true ?\r\n          props.unfollowFunc(props.id) :\r\n          props.followFunc(props.id)\r\n      }} >{followFlag()}</button>\r\n\r\n  </div>)\r\n}\r\n\r\nexport default UsersMap\r\n\r\n","import React from 'react'\r\nimport UsersMap from '../UsersMap/usersMap'\r\nimport userPhoto from '../img/user.png'\r\nimport c from './usersSteck.module.css'\r\nimport loadGif from '../img/free-gif-preloaders-psds-09.gif'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nlet UsersSteck = (props) => {\r\n        let UserMap = props.state.users.users.map(\r\n        d => <div className={c.main}>\r\n            <div className={c.second}>\r\n                <NavLink to={`/body/profile/${d.id}`}>\r\n                     <img src={d.photos.small != null ? d.photos.small : userPhoto} alt={d.id} className={c.img} />\r\n                     </NavLink>\r\n                <UsersMap id={d.id} FullName={d.name}  Country={d.Country} followed={d.followed} followFunc={props.follow}  unfollowFunc={props.unfollow}\r\n                isLoading={props.isLoading} loadStatus={props.state.users.isLoading} idFilter={props.state.users.idFilter}  />\r\n            </div>\r\n        </div>)\r\n\r\n\r\n    let usersReturn = () => {\r\n\r\n        return (\r\n            props.showMore(props.state.users.count+2),\r\n            props.onPageChanged(props.state.users.count)\r\n        )\r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <img src={props.state.users.isFetching?null:`${loadGif}`}/>\r\n            <div>{UserMap}</div>\r\n            <button  onClick={usersReturn} className={c.showMore}>Show more</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default UsersSteck\r\n\r\n\r\n\r\n\r\n","import { userAPI } from \"../appElements/API/API\"\r\n\r\nlet initialStore = {\r\n    users: [],\r\n    count: 2,\r\n    isFetching: false,\r\n    idFilter: []\r\n}\r\n\r\n\r\n\r\nexport let usersReducer = (state = initialStore, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'follow':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(d => {\r\n                    if (d.id === action.status) {\r\n                        return { ...d, followed: true }\r\n                    }\r\n                    return d\r\n                })\r\n            }\r\n\r\n\r\n        case 'unfollow':\r\n\r\n            return {\r\n                ...state,\r\n                users: state.users.map(d => {\r\n                    if (d.id === action.status) {\r\n                        return { ...d, followed: false }\r\n                    }\r\n                    return d\r\n                })\r\n            }\r\n\r\n\r\n        case 'setUsers':\r\n            return {\r\n                ...state,\r\n                users: [...action.status]\r\n            }\r\n\r\n        case 'showMore':\r\n            if (action.type === 'showMore') {\r\n                let stateCopy = {\r\n                    ...state,\r\n                    count: action.status\r\n                }\r\n                return stateCopy\r\n            }\r\n        case 'togleIsFetching': {\r\n            let stateCopy = {\r\n                ...state,\r\n                isFetching: action.status\r\n            }\r\n            return stateCopy\r\n        }\r\n        case 'isLoading': {\r\n            let stateCopy = {\r\n                ...state,\r\n                idFilter: action.status ? [...state.idFilter, action.id] : state.idFilter.filter(id => id !== action.id)\r\n            }\r\n            return stateCopy\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport let setUsers = (action) => ({ type: 'setUsers', status: action })\r\nexport let showMore = (action) => ({ type: 'showMore', status: action })\r\nexport let togleIsFetching = (action) => ({ type: 'togleIsFetching', status: action })\r\nexport let follow = (action) => ({ type: 'follow', status: action })\r\nexport let unfollow = (action) => ({ type: 'unfollow', status: action })\r\nexport let isLoading = (action, id) => ({ type: 'isLoading', status: action, id: id })\r\n\r\n\r\n\r\nexport const UsersThunk = (count) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(togleIsFetching(false))\r\n        userAPI.getUsers(count).then(\r\n            (data) => {\r\n                dispatch(togleIsFetching(true))\r\n                dispatch(setUsers(data.data.items))\r\n            })\r\n    }\r\n}\r\n\r\nexport const followThunk = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(isLoading(true, id))\r\n        userAPI.follow(id).then(\r\n            data => {\r\n                return data.data.resultCode === 0 ?\r\n                    dispatch(follow(id)) : null,\r\n                    dispatch(isLoading(false, id))\r\n\r\n                \r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollowThunk = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(isLoading(true, id))\r\n        userAPI.unfollow(id).then(\r\n            data => {\r\n                return data.data.resultCode === 0 ?\r\n                    dispatch(unfollow(id)) : null,\r\n                    dispatch(isLoading(false, id))\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport UsersSteck from './UsersSteck/usersSteck'\r\nimport {isLoading, follow,unfollow,showMore, UsersThunk, followThunk,unfollowThunk} from '../../Reducers/UsersReducer'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport withAuthCheck from '../HOC/withAuthCheck'\r\n\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n     return this.props.UsersThunk(this.props.state.users.count)\r\n\r\n    }\r\n\r\n    onPageChanged = () => {return this.props.UsersThunk(this.props.state.users.count+2,this.props.state.users.users)}\r\n\r\n    followFunc = (id) => {return this.props.followThunk(id)}\r\n\r\n\r\n    unfollowFunc = (id) => {return this.props.unfollowThunk(id)}\r\n\r\n    render() {\r\n        return <UsersSteck\r\n            state={this.props.state}\r\n            onPageChanged={this.onPageChanged}\r\n            showMore={this.props.showMore}\r\n            follow={this.followFunc}\r\n            unfollow={this.unfollowFunc}\r\n            isLoading={this.props.isLoading}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {return { state: state}}\r\n\r\nexport let UsersContainer =compose(\r\n    connect(mapStateToProps,\r\n        {isLoading, follow,unfollow,showMore,UsersThunk,followThunk,unfollowThunk}),\r\n    // withAuthCheck\r\n)(UsersAPI)\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n\r\n\r\nexport let LogInfo=(props)=>{\r\n    return props.props.resultCode===1?<div>Залогинься</div>:\r\n        <form>\r\n           <div><Field name='email' component='div'>{props.props.data.email}</Field></div> \r\n           <div> <Field name='id' component='div'>{props.props.data.id}</Field></div>\r\n           <div>  <Field name='login' component='div'>{props.props.data.login}</Field></div>\r\n        </form>\r\n\r\n}\r\n\r\nLogInfo=reduxForm({form:'logInfo'})(LogInfo)","import React from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport c from './Header.module.css'\r\nimport { LogInfo } from './logInfo';\r\nimport { loginAPI } from '../API/API';\r\n\r\nlet Header = (props) => {\r\n\r\nlet logout=()=>{\r\n    return  loginAPI.logout().then(data=>data.data.resultCode===0?props.authThunk():null ) \r\n}\r\n\r\n\r\n    return (\r\n        <div className={c.main}>\r\n                <div className={c.profile}> <NavLink to='/body/profile'>Profile</NavLink></div>\r\n            <div className={c.dialogs}> <NavLink to='/body/Dialogs'>Dialogs</NavLink></div>\r\n            <div className={c.users}> <NavLink to='/users'>Users</NavLink></div>\r\n            <div className={c.login}>\r\n            <NavLink to='/body/login' onClick={props.authThunk}>Login </NavLink>\r\n                {props.props.resultCode===1?null:<div><button onClick={logout}>Logout</button></div>}\r\n                \r\n                \r\n                <Route path='/body/login' render={()=>{return <LogInfo {...props} />}} />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from './Header';\r\nimport { authMe, authThunk } from '../../Reducers/authMeReducer'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass HeaderAPI extends React.Component{\r\n    componentDidMount(){ return this.props.authThunk()\r\n    }\r\n    render(){\r\n        return <Header props={this.props.state} authThunk={this.props.authThunk} />\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps=(state)=>{return { \r\n    state:state.authMe,\r\n    loginData:state.login\r\n}}\r\n\r\nlet HeaderContainer= connect(mapStateToProps,{authMe,authThunk})(HeaderAPI)\r\n\r\nexport default HeaderContainer\r\n\r\n","import React from 'react';\nimport Sidebar from './appElements/Sidebar/Sidebar';\nimport Bottom from './appElements/Bottom/Bottom';\nimport c from './app.module.css'\nimport { BodyContainer } from './appElements/Body/connect/connect';\nimport { Route } from 'react-router-dom';\nimport { UsersContainer } from './appElements/Users/UsersAPI';\nimport HeaderContainer from './appElements/Header/HeaderAPI';\n\n\nlet App = () => {\n\n    return (\n    <div className={c.app}>\n     <div className={c.header}>  <HeaderContainer /> </div>\n     <Route exact path='/body/:prof?/:userId?' render={()=>{return <div className={c.body}><BodyContainer/></div>} }/>\n     <Route path='/users' render={ ()=>{return <div className={c.users}><UsersContainer/></div>}}></Route>\n     <div className={c.sidebar}> <Sidebar/>  </div>\n     <div className={c.bottom}>  <Bottom  /> </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: 'Hello', key: 1 },\r\n    { id: 2, message: 'How are you', key: 2 }\r\n    ]\r\n  }\r\n\r\n\r\n\r\n    export let postReducer = (state = initialState, action) => {\r\n      switch (action.type) {\r\n        case 'postPush':\r\n          let newPush = { id: 4, message: action.textt, key: 4 }\r\n          let stateCopy={...state,\r\n          posts:[...state.posts,newPush]}\r\n          return stateCopy;\r\n        default: return state\r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\nlet initialState={\r\n  comment:[]\r\n}\r\n\r\n\r\nexport let commentReducer = (state = initialState, action) => {\r\n  \r\n  switch (action.type) {\r\n    case 'postComment':\r\n      let stateCopy={...state,\r\n      comment:[...state.comment,action.textt]}\r\n      return stateCopy\r\n\r\n    default: return state\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n    let initialStore={  \r\n          aboutMe: \"я\",\r\n          contacts: {\r\n          facebook: \"facebom\",\r\n          website: null,\r\n          vk: \"vk.cmych\",\r\n          twitter: \"https://twr.com/@sdf\",\r\n          instagram: \"instom/sds\",\r\n          youtube: null,\r\n          github: \"githom\",\r\n          mainLink: null\r\n        },\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"неурачусь\",\r\n        fullName: \"samurw name\",\r\n        userId: 2,\r\n        photos: {\r\n          small: \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\r\n          large: \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\r\n}}\r\n    \r\nlet UserIdReducer=(state=initialStore,action)=>{\r\n   switch(action.type){\r\n       case 'userId':{\r\n           return {...state,...action.action}}\r\n        default: return state\r\n       }\r\n   }\r\n\r\n\r\n\r\n\r\nexport default UserIdReducer","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport { postReducer } from \"./Reducers/postReducer\";\r\nimport { commentReducer } from \"./Reducers/commentReducer\";\r\nimport { usersReducer } from \"./Reducers/UsersReducer\";\r\nimport UserIdReducer from \"./Reducers/UserIdReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { authMeReducer } from \"./Reducers/authMeReducer\";\r\nimport { reducer } from \"redux-form\";\r\nimport { loginReducer } from \"./Reducers/loginReducer\";\r\n\r\nlet reducers=combineReducers(\r\n  {posts:postReducer,\r\n  comment:commentReducer,\r\n  users:usersReducer,\r\n  id:UserIdReducer,\r\n  authMe:authMeReducer,\r\n  login:loginReducer,\r\n  form:reducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport let store=createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store=store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { createStore, combineReducers } from \"redux\"\r\n// import { commentReducer } from \"./Reducers/commentReducer\"\r\n// import { postReducer } from \"./Reducers/postReducer\"\r\n\r\n\r\n// let reducers=combineReducers({\r\n//   comment:commentReducer,\r\n//   posts:postReducer\r\n// })\r\n\r\n//  export let store = createStore(reducers)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './store-redux';\nimport { Provider } from 'react-redux';\n\nlet Rerender=()=>\n{ReactDOM.render(\n    <BrowserRouter>    \n    <Provider store={store}>\n    <App/>\n    </Provider>\n    </BrowserRouter> ,\n  document.getElementById('root')\n)};\n\nRerender()\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app_header__FM1Zx\",\"sidebar\":\"app_sidebar__3-JtV\",\"body\":\"app_body__17Ue8\",\"bottom\":\"app_bottom__2LsAc\",\"app\":\"app_app__3CI90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Header_login__1rVAi\",\"main\":\"Header_main__1v7BK\",\"profile\":\"Header_profile__z7PRU\",\"dialog\":\"Header_dialog__37CWj\",\"users\":\"Header_users__2CV_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"usersSteck_img__36ygt\",\"showMore\":\"usersSteck_showMore__12Ip1\"};"],"sourceRoot":""}